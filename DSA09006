#include<bits/stdc++.h>
//#include<iostream>
using namespace std ;
#define int long long
const int maxn = 1e7 + 7;
const int mod = 1e9 + 7;
int n, m, s, t;
vector<int> adj[1005];
bool visited[1005];
int parent[1005];

void init()
	{
		memset(visited, false, sizeof(visited));
		memset(adj, false, sizeof(adj));
		memset(parent, false, sizeof(parent));
		cin >> n >> m >> s >> t;
		while(m--){
			int x, y; cin >> x >> y;
			adj[x].push_back(y);
			adj[y].push_back(x);
		}
	}

void dfs(int u)
	{
		visited[u] = true;
		for(int x: adj[u]){
			if(!visited[x])
				{
					dfs(x);
					parent[x] = u;
				}
		}
	}
int32_t main()
	{
        ios_base::sync_with_stdio(0);
        cin.tie(0); cout.tie(0);
		int tc; cin >> tc;
		while(tc--)
			{
				init();
				dfs(s);
				if(!visited[t])
					{
						cout << "-1";
					}
				else
					{
						stack<int> st;
						while(t != s)
							{
								st.push(t);
								t = parent[t];
							}
							st.push(s);
						while(!st.empty()){
							cout << st.top()<< ' ';
							st.pop();
						}
					}
				cout << endl;
			}
		return 0;
	}
