#include<bits/stdc++.h>
//#include<iostream>
using namespace std ;
#define int long long
const int maxn = 1e7 + 7;
const int mod = 1e9 + 7;

int n, m;
vector<int> adj[1005];
int color[1005];
int parent[1005];

void init(){
	memset(color, false , sizeof(color));
	memset(adj, false , sizeof(adj));
	memset(parent, false , sizeof(parent));
	cin >> n >> m;
	while(m--){
		int x, y; cin >> x >> y;
		adj[x].push_back(y);
	}
}	

bool dfs(int u){
	color[u] = 1;
	for(int x: adj[u]){
		if(color[x] == 0){
			parent[x] = u;
			if(dfs(x))
				return true;
		}
		else if(color[x] == 1)
				return true;
	}	
	color[u] = 2;
	return false;
}
int32_t main()
	{
        ios_base::sync_with_stdio(0);
        cin.tie(0); cout.tie(0);
		int t; cin >> t;
		while(t--){
			init();
			int ok = 0;
			for(int i = 1; i <= n ;i++){
				if(!color[i]){
					if(dfs(i)){
						ok = 1;
					}
				}
			}
			if(ok) cout << "YES\n";
			else cout <<"NO\n";
		}
		return 0;
	}
